{#
  Content Filter System Component
  
  Creates filter buttons for Science, Policy, and Tech content areas.
  Implements accessibility features and responsive design.
  
  Parameters:
  - filters: array of filter objects with { id, label, count } (optional)
  - activeFilter: currently active filter ID (optional, defaults to 'all')
  - class: additional CSS classes (optional)
#}

{% set defaultFilters = [
  { id: 'all', label: 'All', ariaLabel: 'Show all content' },
  { id: 'science', label: 'Science', ariaLabel: 'Show science content only' },
  { id: 'policy', label: 'Policy', ariaLabel: 'Show policy content only' },
  { id: 'tech', label: 'Tech', ariaLabel: 'Show technology content only' }
] %}

{% set filterList = filters or defaultFilters %}
{% set active = activeFilter or 'all' %}

<div class="filter-system" 
     role="group" 
     aria-label="Content filter options"
     {% if class %}class="{{ class }}"{% endif %}>
  
  {# Filter buttons container with responsive layout #}
  <div class="flex flex-wrap gap-2 sm:gap-3 justify-center sm:justify-start">
    {% for filter in filterList %}
      <button type="button"
              class="filter-button {% if filter.id == active %}filter-button--active{% else %}filter-button--inactive{% endif %}"
              data-filter="{{ filter.id }}"
              aria-label="{{ filter.ariaLabel or ('Filter by ' + filter.label) }}"
              aria-pressed="{% if filter.id == active %}true{% else %}false{% endif %}"
              id="filter-{{ filter.id }}">
        
        {# Button content with optional count #}
        <span class="filter-button__label">{{ filter.label }}</span>
        {% if filter.count %}
          <span class="filter-button__count" aria-hidden="true">({{ filter.count }})</span>
        {% endif %}
      </button>
    {% endfor %}
  </div>
  
  {# Screen reader announcement area for filter changes #}
  <div class="sr-only" 
       aria-live="polite" 
       aria-atomic="true" 
       id="filter-announcement">
    <!-- Dynamic announcements will be inserted here by JavaScript -->
  </div>
</div>

<style>
  /* Filter button base styles using theme system */
  .filter-button {
    /* Base button styling following theme system */
    @apply inline-flex items-center justify-center gap-1.5;
    @apply px-4 py-2 rounded-md;
    @apply font-body font-medium text-sm;
    @apply transition-all duration-200 ease-in-out;
    @apply focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-secondary;
    @apply disabled:opacity-50 disabled:cursor-not-allowed;
    
    /* Responsive sizing */
    @apply sm:px-5 sm:py-2.5 sm:text-base;
    
    /* Touch targets for mobile */
    min-height: 44px;
    min-width: 44px;
  }
  
  /* Sidebar filter system specific styles */
  .sidebar-filter-system .filter-button {
    @apply w-full justify-start mb-2 text-sm;
    @apply bg-filter-inactive text-filter-inactive-text border border-secondary border-opacity-20;
    @apply hover:bg-filter-hover hover:text-filter-hover-text;
    min-height: auto;
    padding: 0.5rem 1rem;
  }
  
  .sidebar-filter-system .filter-button--active {
    @apply bg-filter-active text-filter-active-text border-filter-active;
    box-shadow: none;
    transform: none;
  }
  
  .sidebar-filter-system .filter-button--inactive {
    @apply bg-filter-inactive text-filter-inactive-text border-secondary border-opacity-20;
  }
  
  .sidebar-filter-system .filter-button--inactive:hover {
    @apply bg-filter-hover text-filter-hover-text;
    transform: none;
    box-shadow: none;
  }
  
  /* Inactive filter button state */
  .filter-button--inactive {
    @apply bg-surface border border-neutral-200 dark:border-neutral-700;
    @apply text-textSecondary;
    @apply hover:bg-neutral-50 dark:hover:bg-neutral-800;
    @apply hover:text-text hover:border-secondary;
    @apply active:scale-95;
  }
  
  /* Active filter button state */
  .filter-button--active {
    @apply bg-primary text-surface;
    @apply border border-primary;
    @apply shadow-sm;
    
    /* Subtle animation for active state */
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 195, 255, 0.2);
  }
  
  /* Filter button label */
  .filter-button__label {
    @apply font-medium;
  }
  
  /* Filter button count (if provided) */
  .filter-button__count {
    @apply text-xs opacity-75;
    @apply ml-1;
  }
  
  /* Focus states for accessibility */
  .filter-button:focus-visible {
    @apply ring-2 ring-offset-2 ring-secondary;
  }
  
  /* Hover animations */
  .filter-button--inactive:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  /* Active button hover (subtle) */
  .filter-button--active:hover {
    @apply bg-secondary;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 195, 255, 0.3);
  }
  
  /* Responsive adjustments */
  @media (max-width: 640px) {
    .filter-system {
      @apply px-4;
    }
    
    .filter-button {
      @apply flex-1 min-w-0;
      @apply text-xs px-3 py-2;
    }
    
    .filter-button__label {
      @apply truncate;
    }
  }
  
  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .filter-button--active {
      @apply border-2;
    }
    
    .filter-button--inactive {
      @apply border-2;
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .filter-button {
      @apply transition-none;
    }
    
    .filter-button--inactive:hover,
    .filter-button--active:hover {
      transform: none;
    }
  }
</style>
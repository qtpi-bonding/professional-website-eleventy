{#
  Content Filter System Component
  
  Creates filter buttons for Science, Policy, and Tech content areas.
  Implements accessibility features and responsive design.
  
  Parameters:
  - filters: array of filter objects with { id, label, count } (optional)
  - activeFilter: currently active filter ID (optional, defaults to 'all')
  - class: additional CSS classes (optional)
#}

{% set defaultFilters = [
  { id: 'all', label: site.content.filters.labels.all, ariaLabel: 'Show all content' },
  { id: 'science', label: site.content.filters.labels.science, ariaLabel: 'Show science content only' },
  { id: 'policy', label: site.content.filters.labels.policy, ariaLabel: 'Show policy content only' },
  { id: 'tech', label: site.content.filters.labels.tech, ariaLabel: 'Show technology content only' }
] %}

{% set filterList = filters or defaultFilters %}
{% set active = activeFilter or 'all' %}

<div class="filter-system" 
     role="group" 
     aria-label="Content filter options"
     {% if class %}class="{{ class }}"{% endif %}>
  
  {# Filter buttons container with responsive layout #}
  <div class="flex flex-wrap gap-2 sm:gap-3 justify-center sm:justify-start">
    {% for filter in filterList %}
      <button type="button"
              class="filter-button {% if filter.id == active %}filter-button--active{% else %}filter-button--inactive{% endif %}"
              data-filter="{{ filter.id }}"
              aria-label="{{ filter.ariaLabel or ('Filter by ' + filter.label) }}"
              aria-pressed="{% if filter.id == active %}true{% else %}false{% endif %}"
              id="filter-{{ filter.id }}">
        
        {# Button content with optional count #}
        <span class="filter-button__label">{{ filter.label }}</span>
        {% if filter.count %}
          <span class="filter-button__count" aria-hidden="true">({{ filter.count }})</span>
        {% endif %}
      </button>
    {% endfor %}
  </div>
  
  {# Screen reader announcement area for filter changes #}
  <div class="sr-only" 
       aria-live="polite" 
       aria-atomic="true" 
       id="filter-announcement">
    <!-- Dynamic announcements will be inserted here by JavaScript -->
  </div>
</div>

<style>
  /* Filter button base styles using theme system */
  .filter-button {
    /* Base button styling following theme system */
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.375rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-family: var(--font-body);
    font-weight: 500;
    font-size: 0.875rem;
    transition: all 200ms ease-in-out;
    outline: none;
    
    /* Touch targets for mobile */
    min-height: 44px;
    min-width: 44px;
  }
  
  .filter-button:focus-visible {
    ring: 2px solid var(--color-secondary);
    ring-offset: 2px;
  }
  
  .filter-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  /* Responsive sizing */
  @media (min-width: 640px) {
    .filter-button {
      padding: 0.625rem 1.25rem;
      font-size: 1rem;
    }
  }
  
  /* Sidebar filter system specific styles */
  .sidebar-filter-system .filter-button {
    width: 100%;
    justify-content: flex-start;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    border-width: 2px;
    min-height: auto;
    padding: 0.5rem 1rem;
    transition: all 0.2s ease-in-out;
  }
  
  /* Category-specific colors - inactive state (transparent) */
  .sidebar-filter-system .filter-button[data-filter="science"].filter-button--inactive {
    background-color: transparent;
    color: var(--color-science);
    border-color: var(--color-science);
  }
  
  .sidebar-filter-system .filter-button[data-filter="policy"].filter-button--inactive {
    background-color: transparent;
    color: var(--color-policy);
    border-color: var(--color-policy);
  }
  
  .sidebar-filter-system .filter-button[data-filter="tech"].filter-button--inactive {
    background-color: transparent;
    color: var(--color-tech);
    border-color: var(--color-tech);
  }
  
  .sidebar-filter-system .filter-button[data-filter="all"].filter-button--inactive {
    background-color: transparent;
    color: var(--color-primary);
    border-color: var(--color-primary);
  }
  
  /* Active states - solid background with secondary color (matches focus outline) */
  .sidebar-filter-system .filter-button[data-filter="science"].filter-button--active {
    background-color: var(--color-secondary) !important;
    color: var(--color-surface) !important;
    border-color: var(--color-secondary) !important;
    font-weight: 600;
  }
  
  .sidebar-filter-system .filter-button[data-filter="policy"].filter-button--active {
    background-color: var(--color-secondary) !important;
    color: var(--color-surface) !important;
    border-color: var(--color-secondary) !important;
    font-weight: 600;
  }
  
  .sidebar-filter-system .filter-button[data-filter="tech"].filter-button--active {
    background-color: var(--color-secondary) !important;
    color: var(--color-surface) !important;
    border-color: var(--color-secondary) !important;
    font-weight: 600;
  }
  
  .sidebar-filter-system .filter-button[data-filter="all"].filter-button--active {
    background-color: var(--color-secondary) !important;
    color: var(--color-surface) !important;
    border-color: var(--color-secondary) !important;
    font-weight: 600;
  }
  
  /* Hover states - light background for inactive buttons */
  .sidebar-filter-system .filter-button[data-filter="science"].filter-button--inactive:hover {
    background-color: var(--color-science);
    color: var(--color-surface);
    opacity: 0.3;
  }
  
  .sidebar-filter-system .filter-button[data-filter="policy"].filter-button--inactive:hover {
    background-color: var(--color-policy);
    color: var(--color-surface);
    opacity: 0.3;
  }
  
  .sidebar-filter-system .filter-button[data-filter="tech"].filter-button--inactive:hover {
    background-color: var(--color-tech);
    color: var(--color-surface);
    opacity: 0.3;
  }
  
  .sidebar-filter-system .filter-button[data-filter="all"].filter-button--inactive:hover {
    background-color: var(--color-primary);
    color: var(--color-surface);
    opacity: 0.3;
  }
  
  /* Inactive filter button state - only for non-sidebar filters */
  .filter-system:not(.sidebar-filter-system) .filter-button--inactive {
    background-color: var(--color-surface);
    border: 2px solid var(--color-neutral-200);
    color: var(--color-textSecondary);
  }
  
  .filter-system:not(.sidebar-filter-system) .filter-button--inactive:hover {
    background-color: var(--color-neutral-100);
    color: var(--color-text);
    border-color: var(--color-secondary);
  }
  
  /* Active filter button state */
  .filter-button--active {
    background-color: var(--color-primary);
    color: var(--color-surface);
    border: 2px solid var(--color-primary);
  }
  
  /* Filter button label */
  .filter-button__label {
    font-weight: 500;
  }
  
  /* Filter button count (if provided) */
  .filter-button__count {
    font-size: 0.75rem;
    opacity: 0.75;
    margin-left: 0.25rem;
  }
  
  /* Active button hover (subtle) - only for non-sidebar filters */
  .filter-system:not(.sidebar-filter-system) .filter-button--active:hover {
    background-color: var(--color-secondary);
    border-color: var(--color-secondary);
  }
  
  /* Responsive adjustments */
  @media (max-width: 640px) {
    .filter-system {
      padding-left: 1rem;
      padding-right: 1rem;
    }
    
    .filter-button {
      flex: 1;
      min-width: 0;
      font-size: 0.75rem;
      padding: 0.5rem 0.75rem;
    }
    
    .filter-button__label {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }
  
  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .filter-button--active {
      border-width: 2px;
    }
    
    .filter-button--inactive {
      border-width: 2px;
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .filter-button {
      transition: none;
    }
  }
</style>